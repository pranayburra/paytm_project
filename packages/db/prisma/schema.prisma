// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id          Int      @id @default(autoincrement())
  email       String?  @unique
  name        String? 
  number      String  @unique
  password    String
  onRampTransaction OnRampTransaction[]
  Balance   Balance[]
  sentTransfers p2pTransfer[] @relation(name: "FromUserRelation")
  recievedTransfers p2pTransfer[] @relation(name:"ToUserRelation")
}
model p2pTransfer{
  id Int  @id @default(autoincrement())
  timeStamp DateTime @default(now())
  amount Int
  fromUserId Int
  fromUser User @relation(name: "FromUserRelation",fields: [fromUserId],references: [id])
  toUserId Int
  toUser User @relation(name:"ToUserRelation",fields: [toUserId],references: [id])
}

model OnRampTransaction{
  id Int  @id @default(autoincrement())
  status OnRampStatus
  token String @unique
  startTime    DateTime @default(now())
  provider String
  amount Int
  userId Int
  user User @relation(fields: [userId],references: [id])
}
model Balance{
  id Int @id @default(autoincrement())
  userId Int
  amount Int
  Locked Int
  user User @relation(fields: [userId],references: [id])
}
enum OnRampStatus{
  Success
  Failure
  Pending
}



